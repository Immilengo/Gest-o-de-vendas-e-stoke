/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Control.ControlInventario;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author IMMilengo
 */
public class Inventario extends javax.swing.JFrame {
ControlInventario ci=new ControlInventario();
    /**
     * Creates new form Inventario
     */
     String cabecalho[]={"Nome Do Produto","Quantidade de Unidades","Valor Pago","Data da Venda"};
    public void actualizartabela(){
    ci.preencherarraylist();
    tbh.setModel(new DefaultTableModel(ci.transformarlistaobjeto(),cabecalho));
    }
    public Inventario() {
        initComponents();
           ArrayList<String> lista=new ArrayList();
        try {
            BufferedReader ler=new BufferedReader(new FileReader("Historico.txt"));
            String linha;
            while((linha=ler.readLine())!=null){
            lista.add(linha);
            }
            Collections.sort(lista);
            BufferedWriter escreve=new BufferedWriter(new FileWriter("Historico.txt"));
            for(String linhas:lista){
            escreve.write(linhas+"\n");
           
            }
            escreve.close();
            
            ler.close();
        } catch (Exception e) {
        }
        
         actualizartabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbh = new javax.swing.JTable();
        act = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtqv = new javax.swing.JLabel();
        jtvv = new javax.swing.JLabel();
        txtpesquisar = new javax.swing.JTextField();
        Bpesquisar = new javax.swing.JButton();
        jconsultas = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setToolTipText("Registro de Venda");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 536, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Histórico");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tbh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbh);

        act.setText("Actualizar");
        act.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actActionPerformed(evt);
            }
        });

        jLabel1.setText("Total de Quantidade Vendida");

        jLabel2.setText("Total de Valor Vendido");

        jtqv.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jtvv.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtpesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpesquisarActionPerformed(evt);
            }
        });

        Bpesquisar.setText("pesquisar");
        Bpesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BpesquisarActionPerformed(evt);
            }
        });

        jconsultas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escolher Consulta", "Produto Mais Vendido", "Produto Menos Vendido", "Ordenar: Do Mais ao Menos Vendido", "Ordenar: Do Menos ao Mais Vendido", "Ordenar Os Produtos Em Ordem Alfabética" }));
        jconsultas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jconsultasActionPerformed(evt);
            }
        });

        jLabel3.setText("Todas as Consultas");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(40, 40, 40)
                                    .addComponent(jtvv, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtqv, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(txtpesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Bpesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(act, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(36, 36, 36)
                            .addComponent(jconsultas, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jtqv, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtpesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Bpesquisar)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jtvv, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(act))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jconsultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void actActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actActionPerformed
        // TODO add your handling code here:
        actualizartabela();
         
          jtqv.setText("");
            jtvv.setText("");
            txtpesquisar.setText("");
          
    }//GEN-LAST:event_actActionPerformed

    private void txtpesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpesquisarActionPerformed

    private void BpesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BpesquisarActionPerformed
        // TODO add your handling code here:
        String item=txtpesquisar.getText();
          try(BufferedReader leitor=new BufferedReader(new FileReader("Historico.txt"))) {
          int quantidade=0,valor=0;
          String linha;
          DefaultTableModel dfm=(DefaultTableModel) tbh.getModel();
          dfm.setRowCount(0);
          while((linha=leitor.readLine())!=null){
          if(linha.contains(item)){
           String[] partir=linha.split(";");
          
          dfm.addRow(partir);
          quantidade+=Integer.parseInt(partir[1]);
          valor+=Integer.parseInt(partir[2]);
          }
          }
          jtqv.setText(String.valueOf(quantidade));
          jtvv.setText(String.valueOf(valor));
          
          
          }catch(Exception e){
          
          }
        
        
    }//GEN-LAST:event_BpesquisarActionPerformed

    private void jconsultasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jconsultasActionPerformed
        // TODO add your handling code here:
        /*
        Produto Mais Vendido
        Produto Menos Vendido
        Ordenar: Do Mais ao Menos Vendido
        Ordenar: Do Menos ao Mais Vendido
        Ordenar Os Produtos Em Ordem Alfabética
        */
        ArrayList<String> listar=new ArrayList<>();
        String produto;
        
        try(BufferedReader leitura=new BufferedReader(new FileReader("Historico.txt"))) {
                String line;
                 String linha;
                String row=jconsultas.getSelectedItem().toString();
                String maior="imm;2";
                 DefaultTableModel dtm=(DefaultTableModel) tbh.getModel();
                 dtm.setRowCount(0);
                 if(row=="Produto Mais Vendido"){
                     while((line=leitura.readLine())!=null){
                 String parte[]=line.split(";");
                 String divide[]=maior.split(";");
                 if(Integer.parseInt(parte[1])>Integer.parseInt(divide[1])){
                 maior=line;
                 }
                 }
                 String nova[]=maior.split(";");
                 dtm.addRow(nova);
                 
                 
                 try(BufferedReader leitor=new BufferedReader(new FileReader("Historico.txt"))) {
          int quantidade=0,valor=0;
         // String linha;
          DefaultTableModel dfm=(DefaultTableModel) tbh.getModel();
          dfm.setRowCount(0);
          while((linha=leitor.readLine())!=null){
              String[] cont=linha.split(";");
          if(cont[1].contains(nova[1])){
           String[] partir=linha.split(";");
          
          dfm.addRow(partir);
          quantidade+=Integer.parseInt(partir[1]);
          valor+=Integer.parseInt(partir[2]);
          }
          }
          jtqv.setText(String.valueOf(quantidade));
          jtvv.setText(String.valueOf(valor));
          
          
          }catch(Exception e){
          
          }     
                 
                 
                 }else if(row=="Produto Menos Vendido"){
                  while((line=leitura.readLine())!=null){
                 String parte[]=line.split(";");
                 String divide[]=maior.split(";");
                 if(Integer.parseInt(parte[1])<Integer.parseInt(divide[1])){
                 maior=line;
                 }
                 
                 }
                 String nova[]=maior.split(";");
                dtm.addRow(nova); 
                
                 try(BufferedReader leitor=new BufferedReader(new FileReader("Historico.txt"))) {
          int quantidade=0,valor=0;
         // String linha;
          DefaultTableModel dfm=(DefaultTableModel) tbh.getModel();
          dfm.setRowCount(0);
          while((linha=leitor.readLine())!=null){
              String[] cont=linha.split(";");
          if(cont[1].contains(nova[1])){
           String[] partir=linha.split(";");
          
          dfm.addRow(partir);
          quantidade+=Integer.parseInt(partir[1]);
          valor+=Integer.parseInt(partir[2]);
          }
          }
          jtqv.setText(String.valueOf(quantidade));
          jtvv.setText(String.valueOf(valor));
          
          
          }catch(Exception e){
          
          }     
                
                 }else if(row=="Ordenar: Do Mais ao Menos Vendido"){
                 
                 
                 }else if(row=="Ordenar: Do Menos ao Mais Vendido"){}else{
                 
                 JOptionPane.showMessageDialog(rootPane, "Faça uma escolha válida");
                 }
             
               
            // Collections.sort(listar); 
                
               /*
            
             while((linha=leitor.readLine())!=null){
          if(linha.contains(item)){
           String[] partir=linha.split(";");
          
          dfm.addRow(partir);
          quantidade+=Integer.parseInt(partir[1]);
          valor+=Integer.parseInt(partir[2]);
          }
          }
          jtqv.setText(String.valueOf(quantidade));
          jtvv.setText(String.valueOf(valor));
          
            */
            leitura.close();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jconsultasActionPerformed

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventario().setVisible(true);
            }
        });
        
        
         
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bpesquisar;
    private javax.swing.JButton act;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jconsultas;
    private javax.swing.JLabel jtqv;
    private javax.swing.JLabel jtvv;
    private javax.swing.JTable tbh;
    private javax.swing.JTextField txtpesquisar;
    // End of variables declaration//GEN-END:variables

    private boolean listar(int i) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}

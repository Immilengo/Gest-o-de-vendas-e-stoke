/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Control.ControlCadastroProduto;
import Control.ControlInventario;
import Control.ControlRealizarVenda;
import Modelo.ModeloFormaDePagamento;
import Modelo.ModeloInventario;
import Modelo.ModeloRealizarVenda;
import java.awt.List;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.management.StringValueExp;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author IMMilengo
 */
public class RealizarVenda extends javax.swing.JFrame {
ControlRealizarVenda crv=new ControlRealizarVenda();
ControlInventario ci=new ControlInventario();
ControlCadastroProduto ccp=new ControlCadastroProduto();
//FormaDePagamento fp=new FormaDePagamento();
int cont=0;
//int convhist;

 LocalDate data=LocalDate.now();
    /**
     * Creates new form RealizarVenda
     */
    public RealizarVenda() {
        initComponents();
        //txtValorPago
       // txtproduto.addItem(ccp.pro(mrc));
       txtproduto.removeAllItems();
       txtproduto.addItem("Nenhum Produto Selecionado");
        try(BufferedReader ler=new BufferedReader(new FileReader("CadastroProduto.txt"))) {
            String line;
            while((line=ler.readLine())!=null){
            String divide[]=line.split(";");
            txtproduto.addItem(divide[0]);
            }
        } catch (Exception e) {
        }
    }
    
     String cabecalho[]={"Produto","Preço","Quantidade de Unidades","Total"};
    public void actualizartabela(){
    crv.preencherarraylist();
    tbvendapro.setModel(new DefaultTableModel(crv.transformarlistaobjeto(),cabecalho));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btaddproduto = new javax.swing.JButton();
        btcancelarvenda = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        bteditarvenda = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        quantipro = new javax.swing.JSpinner();
        txtprecopro = new javax.swing.JTextField();
        btfinalizarvenda = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbvendapro = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtidproduto = new javax.swing.JTextField();
        txttotal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jformadepagamento = new javax.swing.JComboBox<>();
        txtproduto = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtValorPago = new javax.swing.JTextField();
        jtroco = new javax.swing.JLabel();
        Btroco = new javax.swing.JButton();
        bVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btaddproduto.setBackground(new java.awt.Color(0, 0, 204));
        btaddproduto.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btaddproduto.setText("Adicionar Produto");
        btaddproduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btaddprodutoActionPerformed(evt);
            }
        });

        btcancelarvenda.setBackground(new java.awt.Color(255, 0, 0));
        btcancelarvenda.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 18)); // NOI18N
        btcancelarvenda.setText("Cancelar Venda");
        btcancelarvenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btcancelarvendaActionPerformed(evt);
            }
        });

        jLabel7.setText("Quantidade de Unidades");

        bteditarvenda.setBackground(new java.awt.Color(255, 102, 0));
        bteditarvenda.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 18)); // NOI18N
        bteditarvenda.setText("Eliminar do Carrinho");
        bteditarvenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bteditarvendaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel2.setText("Seus Ítens");

        txtprecopro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtprecoproActionPerformed(evt);
            }
        });

        btfinalizarvenda.setBackground(new java.awt.Color(0, 204, 51));
        btfinalizarvenda.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 18)); // NOI18N
        btfinalizarvenda.setText("Gerar Factura");
        btfinalizarvenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btfinalizarvendaActionPerformed(evt);
            }
        });

        jLabel3.setText("ID do Produto");

        tbvendapro.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 51, 51), new java.awt.Color(0, 102, 102)));
        tbvendapro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome do Produto", "Preço do Produto", "Quantidade de Unidades"
            }
        ));
        jScrollPane1.setViewportView(tbvendapro);

        jLabel6.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel6.setText("Total");

        jLabel4.setText("Produto");

        txtidproduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidprodutoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Snap ITC", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 0));
        jLabel1.setText("    Cash and Care");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel5.setText("Preço");

        jLabel8.setText("Forma de Pagamento");

        jformadepagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--------", "Dinheiro", "Cartão" }));
        jformadepagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jformadepagamentoActionPerformed(evt);
            }
        });

        txtproduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--------", "Bolacha", "Milho", "Gasosa", "Sumo", "Detergente", "Yogurte", "Pão", "Salsicha", "Maçã", "Arroz", "Água", "Maionese" }));

        jLabel9.setText("Valor pago");

        jLabel10.setText("Troco");

        txtValorPago.setEnabled(false);

        jtroco.setBackground(new java.awt.Color(255, 255, 255));
        jtroco.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        Btroco.setText("Troco");
        Btroco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtrocoActionPerformed(evt);
            }
        });

        bVoltar.setText("Voltar");
        bVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(bVoltar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btcancelarvenda)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(47, 47, 47)
                                    .addComponent(bteditarvenda)
                                    .addGap(170, 170, 170)))
                            .addGap(56, 56, 56))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jformadepagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(17, 17, 17)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtValorPago, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                            .addComponent(jtroco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Btroco, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 476, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btaddproduto)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(quantipro, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtidproduto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtprecopro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                    .addComponent(btfinalizarvenda, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtproduto, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bVoltar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jformadepagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValorPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Btroco)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtidproduto, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtproduto, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtprecopro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantipro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btaddproduto, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtroco, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btcancelarvenda, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bteditarvenda, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btfinalizarvenda, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btcancelarvendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btcancelarvendaActionPerformed
        // TODO add your handling code here:
        
    DefaultTableModel tab=(DefaultTableModel) tbvendapro.getModel();
    //limpar a tabela
    tab.setRowCount(0);
        try {           
     BufferedWriter bwr=new BufferedWriter(new FileWriter("RegistrodeFatura.txt"));
    bwr.write("");
        } catch (Exception e) {
        }
        txttotal.setText("");
    //ex.:remover todas as linhas usando um loop while
    /*while(tab.getRowCount()>0){
    tab.removeRow(0);
    }*/


//tab.removeTableModelListener(tbvendapro);
    //  txtidproduto.setText("");
    //  txtproduto.setText("");
    //  txtprecopro.setText("");
    }//GEN-LAST:event_btcancelarvendaActionPerformed

    private void bteditarvendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bteditarvendaActionPerformed
        // TODO add your handling code here:
       
        
        try{
          int linhaselecionada;
          // String li;
           
           linhaselecionada= tbvendapro.getSelectedRow();                                                                                                                                                                           
            if(linhaselecionada==-1){
            JOptionPane.showMessageDialog(this,"Nenhuma Linha Selecionada");
            }else{
                DefaultTableModel modelo=(DefaultTableModel) tbvendapro.getModel();
                        modelo.removeRow(linhaselecionada);
     
                        ArrayList<String>linharestante=new ArrayList<>();
            try(BufferedReader br=new BufferedReader(new FileReader("Historico.txt"))) {
              
                String linha;
                int idAtual=0;
                while((linha=br.readLine())!=null){
            String[] partes=linha.split(";");
           
            if(idAtual != linhaselecionada){
            linharestante.add(linha);
            
            }
            idAtual++;
            }
            
            } catch (Exception e) {
            JOptionPane.showMessageDialog(this,"ERRO ao gravar no ARRAYLIST");
            }
            /////////////////////////////////////////////////////////////////////////////////////////////
           
            //////////////////////////////////////////////////////////////////////////////////////////////
            try(BufferedReader brf=new BufferedReader(new FileReader("RegistrodeFatura.txt"))) {
                  BufferedWriter bwr=new BufferedWriter(new FileWriter("RegistrodeFatura.txt",true));
                   BufferedWriter frt=new BufferedWriter(new FileWriter("RegistrodeFaturaTemp.txt",true));
                    
                String linhar;
                int idAtua=0;
            while((linhar=brf.readLine())!=null){
            // String[] parte=linhar.split(";");
            //int idAtual=Integer.parseInt(partes[0].substring(3));
            ////////////////////////////////////////////
            ////////////////////////////////////////
           
            //////////////////////////////////////////////
            /////////////////////////////////////////////
            if(idAtua != linhaselecionada){
           // linharestante.add(linha);
          
           bwr.write(linhar+"\n");
           frt.write(linhar+"\n");
             }
            idAtua++;
            }
             bwr.close();
             brf.close();
             frt.close();
            }catch(Exception e){
            JOptionPane.showMessageDialog(this,"ERRO ao gravar no ARRAYLIST");
            }
            
            try (BufferedWriter bwra=new BufferedWriter(new FileWriter("RegistrodeFatura.txt"))){
                bwra.write("");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this,"ERRO ao gravar no texto");
            }
            
            try (BufferedWriter bwfa=new BufferedWriter(new FileWriter("RegistrodeFatura.txt",true))){
                BufferedReader brfa=new BufferedReader(new FileReader("RegistrodeFaturaTemp.txt"));
                String line;
                while((line=brfa.readLine())!=null){
               //      
                    bwfa.write(line+"\n");
               //
            
                    
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this,"ERRO ao gravar no texto");
            }
              BufferedWriter fra=new BufferedWriter(new FileWriter("RegistrodeFaturaTemp.txt"));
            fra.write("");
            }
            
        } catch (Exception e){
             JOptionPane.showMessageDialog(this,"ERRO No TRY principal");
            }

    }//GEN-LAST:event_bteditarvendaActionPerformed

    private void txtprecoproActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtprecoproActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprecoproActionPerformed

    private void btfinalizarvendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btfinalizarvendaActionPerformed
       
        //ESCREVER NO HISTÓRICO
        try(BufferedWriter escritor=new BufferedWriter(new FileWriter("Historico.txt",true))) {
            BufferedReader histo=new BufferedReader(new FileReader("RegistrodeFatura.txt"));
            
            String linha;
            while((linha=histo.readLine())!= null){
            String partir[]=linha.split(";");
            
            escritor.write(partir[0]+";"+partir[2]+";"+partir[3]+";"+partir[4]+";\n");
            
            }
            
            
            escritor.close();
            histo.close();
        } catch (Exception e) {
        }
        //FIM DE ESCREVER NO HISTÓRICO
        
        
        
        ///////////////////////////////////////////////////////////////////////////////////////
            //ENCONTRANDO O TOTAL DA VENDA
            int totalar=0,conversao;
            try {
                
                BufferedReader ler=new BufferedReader(new FileReader("RegistrodeFatura.txt"));
                String line;
                
                while((line=ler.readLine())!=null){
               
               String partir[]=line.split(";");
               conversao=Integer.parseInt(partir[3]);
               totalar+=conversao;
               
                }
                int valorpago=Integer.parseInt(txtValorPago.getText());
                int troco=valorpago-totalar;
                jtroco.setText(String.valueOf(troco));
                txttotal.setText(String.valueOf(totalar));
                 BufferedWriter escrevertot=new BufferedWriter(new FileWriter("total.txt",true));
                 escrevertot.write(totalar);
                 escrevertot.close();
                 JOptionPane.showMessageDialog(rootPane,totalar);
                 
                BufferedWriter apagar=new BufferedWriter(new FileWriter("total.txt"));
                apagar.write("");
                BufferedWriter escritor=new BufferedWriter(new FileWriter("RegistrodeFatura.txt"));
                escritor.write("");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this,"ERRO ao gravar no texto");
            }
            //FIM DO ENCONTRANDO O TOTAL DA VENDA
            ///////////////////////////////////////////////////////////////////////////////////////
 
           //FIM DE TOTAL DA VENDA REALIZADA
        
        
        FormaDePagamento fp= new FormaDePagamento();
          ArrayList<String> lista=new ArrayList<>();
        try(BufferedReader buf=new BufferedReader(new FileReader("CadastroProduto.txt"))) {
        
          
        String produtovenda,quantidadeunidadevenda,fpag;
        fpag=jformadepagamento.getSelectedItem().toString();
         produtovenda=txtproduto.getSelectedItem().toString();
            quantidadeunidadevenda=quantipro.getValue().toString();   
        int factura=0, cliente=0,n=0,preco,quant;
        int vpago;
        int[] tota=new int[10];
        cliente++;
        factura++;
        String linha,vpa;
        while((linha=buf.readLine()) != null){
        String[] dividir=linha.split(";");
        
         if(produtovenda.equalsIgnoreCase(dividir[0])){
            preco=Integer.parseInt(dividir[1]);  
            quant=Integer.parseInt(quantidadeunidadevenda);
            vpago=preco*quant;
            vpa=String.valueOf(vpago);
            tota[n]=vpago;

            String tot=String.valueOf(totalar);
         ModeloFormaDePagamento mgf=new ModeloFormaDePagamento(factura,cliente,dividir[0],dividir[1],quantidadeunidadevenda,vpa,tot,fpag);
         n++;
         fp.factura(mgf);
         this.hide();
         }
        
        }
        }catch(Exception e){
        
        }     fp.setVisible(true);
    }//GEN-LAST:event_btfinalizarvendaActionPerformed

    private void txtidprodutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidprodutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidprodutoActionPerformed

    
    private void btaddprodutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btaddprodutoActionPerformed
       
             String total;
             int tota;
            String linha,produtovenda,novaquantidadeunidades,quantidadeunidadevenda;
            int c=0,quantidadeunidaderestantearquivo,quantidadeunidadeatualarquivo,atualprobd,conversaoquantipro;
            String precoproduto;
          //  txtproduto.addItem("Immilengo");
             produtovenda=txtproduto.getSelectedItem().toString();
            quantidadeunidadevenda=quantipro.getValue().toString();
         ArrayList<String> linhasAtualizadas = new ArrayList<>();
          String idproduto;
         conversaoquantipro=Integer.parseInt(quantidadeunidadevenda);
            if(conversaoquantipro<1){
            JOptionPane.showMessageDialog(rootPane,"seleciona uma quantidade válida de produtos");
            }else{ 
          try {
           
            BufferedReader leia;
            
            leia=new BufferedReader(new FileReader("CadastroProduto.txt"));
           
                             
            while((linha=leia.readLine())!= null){
            String partes[]=linha.split(";");
          
            if(produtovenda.equalsIgnoreCase(partes[0])){
            quantidadeunidadeatualarquivo=Integer.parseInt(partes[2]);
            if(quantidadeunidadeatualarquivo<1){
            JOptionPane.showMessageDialog(rootPane, "Não temos valor suficiente na prateleira");
            }else{
            quantidadeunidaderestantearquivo=quantidadeunidadeatualarquivo-conversaoquantipro;
                       
                partes[0] =  produtovenda;
                //partes[1]=nacionalidade;
                precoproduto=partes[1];
                partes[2]=String.valueOf(quantidadeunidaderestantearquivo);
                
                // Concatena as partes atualizadas e adiciona à lista
                txtprecopro.setText(partes[1]);
                txtidproduto.setText(partes[3]);
                linhasAtualizadas.add(String.join("; ", partes));
                
                 txtidproduto.getText();
       String preco=txtprecopro.getText();
        
        String novaAdicao[]=new String[3];
        novaAdicao[0]=produtovenda;
        novaAdicao[1]=preco;
        novaAdicao[2]=quantidadeunidadevenda;
        
        DefaultTableModel tabela=(DefaultTableModel) tbvendapro.getModel();
        tabela.addRow(novaAdicao);
           int precoint=Integer.parseInt(partes[1]);      
            int tot=0;
            tota=(tot+precoint)*conversaoquantipro;
           total=String.valueOf(tota); 
         
           LocalDate dia=LocalDate.now();
           String data=dia.toString();
            BufferedWriter fact=new BufferedWriter(new FileWriter("RegistrodeFatura.txt",true));
            fact.write(partes[0]+";"+partes[1]+";"+quantidadeunidadevenda+";"+total+";"+data+";\n");
            
            fact.close();
            }
            } else {
                linhasAtualizadas.add(linha);
                }
            c++;
         System.out.println(c);
           }
            leia.close();
            
            } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane,"ERRO");
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
            System.out.println(e.getMessage());
         }
        ArrayList<String> lista=new ArrayList<>();
        try {
            
            File ori=new File("CadastroProduto.txt");
            File temp=new File("Temporario.txt");
            BufferedReader original=new BufferedReader(new FileReader(ori));
            BufferedWriter temporario=new BufferedWriter(new FileWriter(temp,true));
////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////
    //CONTROLE DE ESTOKE
            String nova[]=new String[5];
        
            String linhar;
            int  quanti = 0;
            int condicao = 0;
            while((linhar=original.readLine())!=null){
            String dividir[]=linhar.split(";");
            
            if( dividir[0].equalsIgnoreCase(produtovenda)){
              int qfix=Integer.parseInt(dividir[2]);        
                if(qfix<1){}else{
           
             int qtab=Integer.parseInt(quantidadeunidadevenda);

            condicao=qfix;
            quanti=qfix-qtab;
            
            }
            //ESCREVER A ALTERAÇÃO NO ARQUIVO TEMPORARIO
          //  if(qfix<1){}else{
          //  if( dividir[0].equalsIgnoreCase(produtovenda)){
                 
          nova[0]=dividir[0];nova[1]=dividir[1];nova[2]=String.valueOf(quanti);nova[3]=dividir[3];nova[4]=dividir[4];      
            }else{
            lista.add(linhar);
            temporario.write(linhar+"\n");
                //System.out.println(linhar);
               // JOptionPane.showMessageDialog(rootPane, linhar);
            }//}
            
            }
            if(condicao<1){}else{
            temporario.write(nova[0]+";"+nova[1]+";"+nova[2]+";"+nova[3]+";"+nova[4]+";\n");
           
            try(BufferedWriter or=new BufferedWriter(new FileWriter("CadastroProduto.txt"))) {
                or.write("");
            } catch (Exception e) {
            }
            
                                   
            temporario.close();
            original.close();
            //FIM DE ESCREVER A ALTERAÇÃO NO ARQUIVO TEMPORARIO
            ArrayList<String> listar=new ArrayList<>();
            //REESCREVER A ALTERAÇÃO NO ARQUIVO PRINCIPAL
            try(BufferedReader ler=new BufferedReader(new FileReader("Temporario.txt"))) {
                BufferedWriter leri=new BufferedWriter(new FileWriter("CadastroProduto.txt",true));
                
                String linea;
                while((linea=ler.readLine())!=null){
                leri.write(linea+"\n");
                }
                
               leri.close();
            } catch (Exception e) {
            }
            
            try(BufferedWriter te=new BufferedWriter(new FileWriter("Temporario.txt"))) {
                temporario.write("");
            } catch (Exception e) {
            }}
             //FIM DE REESCREVER A ALTERAÇÃO NO ARQUIVO PRINCIPAL
            
    ///FIM DE CONTROLE DE ESTOKE
    //////////////////////////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////////////////////////
          
        } catch (Exception e) {
        }}
    }//GEN-LAST:event_btaddprodutoActionPerformed

    private void jformadepagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jformadepagamentoActionPerformed
        // TODO add your handling code here:
        String item=(String) jformadepagamento.getSelectedItem();
        if(item.equals("Dinheiro")){
        txtValorPago.enable();
        }else{
        txtValorPago.setText("");
        txtValorPago.disable();
        jtroco.setText("");
        }
    }//GEN-LAST:event_jformadepagamentoActionPerformed

    private void BtrocoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtrocoActionPerformed
        // TODO add your handling code here:
        int total=0,troco;
        /*try(BufferedReader tot=new BufferedReader(new FileReader("total.txt"))) {
            String linha=tot.readLine();
            String dividir[]=linha.split(";");
            
            for(int i=0;i<dividir.length;i++){
            total+=Integer.parseInt(dividir[i]);
                    }
            int valorpago=Integer.parseInt(txtValorPago.getText());
                int troco=valorpago-total;
                jtroco.setText(String.valueOf(troco));
            
            txttotal.setText(String.valueOf(total));
           // JOptionPane.showMessageDialog(rootPane,"Total: "+ total);
           troco=Integer.parseInt(txtValorPago.getText())-total;
           if(troco<0){
           JOptionPane.showMessageDialog(rootPane,"O valor da Venda é maior que o valor pago\nEstá faltando dinheiro");}else{
           jtroco.setText(String.valueOf(troco));
           }
        } catch (Exception e) {
        }*/
         int totalar=0,conversao;
        try {
                
                BufferedReader ler=new BufferedReader(new FileReader("RegistrodeFatura.txt"));
                String line;
                
                while((line=ler.readLine())!=null){
               
               String partir[]=line.split(";");
               conversao=Integer.parseInt(partir[3]);
               totalar+=conversao;
               
                }
                int valorpago=Integer.parseInt(txtValorPago.getText());
                int trocar=valorpago-totalar;
                if(trocar>=0){
                   
                jtroco.setText(String.valueOf(trocar));
               }else{
                int pos=trocar*(-1);
                JOptionPane.showMessageDialog(rootPane,"O valor pago pelo Cliente é inferior ao total da venda\nValor em Falta: "+pos);
                
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this,"ERRO ao gravar no texto");
            }
    }//GEN-LAST:event_BtrocoActionPerformed

    private void bVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVoltarActionPerformed
        // TODO add your handling code here:
        try {
           BufferedReader ler=new BufferedReader(new FileReader("QuemLogou"));
            
        String acesso=ler.readLine();
        if(acesso.equals("Administrador")){
        TelaPrincipall tela=new TelaPrincipall();
        tela.setVisible(true);
        this.hide();
        }else if(acesso.equals("Funcionário")){
        MenuPrincipalAdm tel=new MenuPrincipalAdm();
        tel.setVisible(true);
        this.hide();
        }
        
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_bVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RealizarVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RealizarVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RealizarVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RealizarVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RealizarVenda().setVisible(true);
            }
        });}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btroco;
    private javax.swing.JButton bVoltar;
    private javax.swing.JButton btaddproduto;
    private javax.swing.JButton btcancelarvenda;
    private javax.swing.JButton bteditarvenda;
    private javax.swing.JButton btfinalizarvenda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jformadepagamento;
    private javax.swing.JLabel jtroco;
    private javax.swing.JSpinner quantipro;
    private javax.swing.JTable tbvendapro;
    private javax.swing.JTextField txtValorPago;
    private javax.swing.JTextField txtidproduto;
    private javax.swing.JTextField txtprecopro;
    private javax.swing.JComboBox<String> txtproduto;
    private javax.swing.JTextField txttotal;
    // End of variables declaration//GEN-END:variables
}
